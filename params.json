{"name":"Godaddy-DynDNS","tagline":"Free Dynamic DNS (DynDNS) for GoDaddy Accounts","body":"# godaddy-dyndns\r\nDynDNS-like public IP auto-updater script for GoDaddy.\r\n\r\nThe script uses `ipify.org` to figure out the machine's public IP. It only accesses GoDaddy when if the IP has changed since the last (successful) script invocation. It logs all its activities to the file `godaddy-dyndns.log` (and automatically rotates the log).\r\n\r\nBased on [Sascha's script with the same name](https://saschpe.wordpress.com/2013/11/12/godaddy-dyndns-for-the-poor/).\r\n\r\n## Setup\r\n#### Automatic\r\n*WARNING!* setup.sh has *ZERO* error checking. All this script does is automate the steps in Manual.\r\n\r\nRun the setup script:\r\n\r\n    ./setup.sh\r\n\r\nEdit `godaddy-dyndns.conf` with your account info.\r\nYou *must* add at least one domain and record for the script to do anything.\r\n\r\n#### Manual\r\nAfter cloning this repo be sure to initialize the submodule pygodaddy-src\r\n\r\n    git submodule init\r\n    git submodule update\r\n\r\nEnsure the symbolic link to ./pygodaddy-src/pygodaddy is correct\r\n\r\nSetup a Python venv:\r\n\r\n    python3 -m venv venv\r\n    source venv/bin/activate\r\n    pip install -r requirements.txt\r\n    deactivate\r\n\r\nCopy the file `godaddy-dyndns.conf.template` to `godaddy-dyndns.conf` and add your information to the new file.\r\n\r\n    cp godaddy-dyndns.conf.template godaddy-dyndns.conf\r\n\r\nAnd lastly add `godaddy-dyndns.sh` to your crontab file, e.g.:\r\n\r\n    */5 * * * * /path/to/script/godaddy-dyndns.sh\r\n    @reboot sleep 30 && /path/to/script/godaddy-dyndns.sh\r\n\r\nThe above makes sure that the script runs when your machine boots, and then every hour after that. `sleep` is used to increase the chance that the network has started before the script is run.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}